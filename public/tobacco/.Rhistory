# Add error bars
errbar(x=bp[,1],
y=var_prop,
yplus=ci$ub*100,
yminus=ci$lb*100,
add=TRUE,
type="n",
errbar.col=adjustcolor("darkred", alpha.f=0.6),
lwd=2)
# Add text of point estimate with c.i.'s
text(x=bp[,1],
y= ifelse(var_pos == 1,
var_prop - (.1*max(var_prop)),
var_prop + (.1*max(var_prop))),
labels=paste0(" ", round(var_prop, digits=1),
"%",
"\n(",
round(ci$lb*100, digits=1),
"%",
"-",
round(ci$ub*100, digits=1),
"%",
")"
),
cex=err.cex,
col=adjustcolor("black", alpha.f=0.7))
abline(h = 0)
}else {
bp <- barplot(var_table,
ylim = c(0, max(ub)*1.2),
col = my_colors,
border = border,
ylab = "Number of employers",
cex.names = cex.names,
las = las,
beside = TRUE)
if(legend){
legend(x = "topright",
fill = my_colors,
bty = "n",
ncol = round(length(my_colors) / 2),
legend = levels(var),
cex = legend.cex,
title = legend.title)
}
# Add error bars
errbar(x=bp[,1],
y=var_table,
yplus=ub,
yminus=lb,
add=TRUE,
type="n",
errbar.col=adjustcolor("darkred", alpha.f=0.6),
lwd=2)
# Add text of point estimate with c.i.'s
text(x=bp[,1],
y= ifelse(var_pos == 1,
var_table - (.1*max(var_table)),
var_table + (.1*max(var_table))),
labels=paste0(" ", round(var_prop, digits=1),
"%",
"\n(",
round(ci$lb*100, digits=1),
"%",
"-",
round(ci$ub*100, digits=1),
"%",
")"
),
cex=err.cex,
col=adjustcolor("black", alpha.f=0.7))
abline(h = 0)
}
# begin by_var
} else{
if(percent){
bp <- barplot(var_prop,
ylim = c(0, max(ci$ub)*120),
col = my_colors,
border = border,
ylab = "Number of employers",
cex.names = cex.names,
las = las,
beside = TRUE)
if(legend){
legend(x = "topright",
fill = my_colors,
bty = "n",
ncol = round(length(my_colors) / 2),
legend = levels(by_var),
cex = legend.cex,
title = legend.title)
}
# Add error bars
errbar(x=bp,
y=var_prop,
yplus=ci$ub*100,
yminus=ci$lb*100,
add=TRUE,
type="n",
errbar.col=adjustcolor("darkred", alpha.f=0.6),
lwd=2)
# Add text of point estimate with c.i.'s
text(x=bp,
y= ifelse(var_pos == 1,
var_prop - (.1*max(var_prop)),
var_prop + (.1*max(var_prop))),
labels=paste0(" ", round(var_prop, digits=1),
"%",
"\n(",
round(ci$lb*100, digits=1),
"%",
"-",
round(ci$ub*100, digits=1),
"%",
")"
),
cex=err.cex,
col=adjustcolor("black", alpha.f=0.7))
abline(h = 0)
} else{
bp <- barplot(var_table,
ylim = c(0, max(ub)*1.2),
col = my_colors,
border = border,
ylab = "Number of employers",
cex.names = cex.names,
las = las,
beside = TRUE)
if(legend){
legend(x = "topright",
fill = my_colors,
bty = "n",
ncol = round(length(my_colors) / 2),
legend = levels(by_var),
cex = legend.cex,
title = legend.title)
}
# Add error bars
errbar(x=bp,
y=var_table,
yplus=ub,
yminus=lb,
add=TRUE,
type="n",
errbar.col=adjustcolor("darkred", alpha.f=0.6),
lwd=2)
# Add text of point estimate with c.i.'s
text(x=bp,
y= ifelse(var_pos == 1,
var_table - (.1*max(var_table)),
var_table + (.1*max(var_table))),
labels=paste0(" ", round(var_prop, digits=1),
"%",
"\n(",
round(ci$lb*100, digits=1),
"%",
"-",
round(ci$ub*100, digits=1),
"%",
")"
),
cex=err.cex,
col=adjustcolor("black", alpha.f=0.7))
abline(h = 0)
}
}
}
BarFun(comb[,"Insurance.Carrier"],
comb[,5],
ref = NULL,
recode_var = NULL,
cex.names = 1,
las = 1,
percent = TRUE,
border = "black",
#rain = TRUE,
legend = TRUE,
err.cex = 0.5)
BarFun(comb[,"Insurance.Carrier"],
comb[,5],
ref = NULL,
recode_var = NULL,
cex.names = 1,
las = 1,
percent = TRUE,
border = "black",
#rain = TRUE,
legend = TRUE,
err.cex = 0.2)
BarFun(comb[,"Insurance.Carrier"],
comb[,5],
ref = NULL,
recode_var = NULL,
cex.names = 0.6,
las = 3,
percent = TRUE,
border = "black",
#rain = TRUE,
legend = TRUE,
err.cex = 0.2)
###################
# WRITE FUNCTION FOR PLOTTING BARS
###################
BarFun <- function(var, by_var = NULL, recode_var = NULL, ref = NULL,
cex.names = 1, las = 1, legend = FALSE, rain = FALSE,
border = "black", percent = TRUE,
legend.cex = 0.8, legend.title = NULL,
err.cex = 0.8){
#   var <- comb[,"Insurance.Carrier"]
#   by_var = comb[,5]
#   ref <- NULL
#   recode_var <- NULL
#   cex.names = 1
#   las = 1
#   percent = TRUE
#   border = "black"
#   rain = TRUE
#   legend = TRUE
# Ensure it's treated as a character
var <- as.character(var)
# Make var a factor and relevel so "unknown" comes first
var <- factor(var)
if(!is.null(by_var)){by_var <- factor(by_var)}
if(is.null(ref)){
var <- var
} else {
var <- relevel(var, ref = ref)
}
# Make a table
if(is.null(by_var)){
var_table <- table(var)
var_names <- names(var_table)
var_vals <- as.numeric(var_table)
var_prop <- prop.table(var_table) * 100
# Calculate confidence intervals
ci <- simpasym(n=sum(var_table),
p=var_prop / 100,
z=1.96, cc=TRUE)
lb <- ci$lb * sum(var_table)
ub <- ci$ub * sum(var_table)
} else {
#var_table <- table(var, by_var)
var_table <- table(by_var, var)
var_names <- levels(var)
var_vals <- matrix(var_table, ncol = length(levels(by_var)))
var_prop <- prop.table(var_table, 2) * 100
# Calculate confidence intervals
ci <- simpasym(n= rep(apply(var_table, 1, sum),2), #sum(var_table),
p=var_prop / 100,
z=1.96, cc=TRUE)
lb <- ci$lb * rep(apply(var_table, 1, sum),2) #var_table#sum(var_table)
ub <- ci$ub * rep(apply(var_table, 1, sum),2)#var_table#sum(var_table)
}
# Assing positions based on relative value compared to others
var_pos <- ifelse(var_prop < 0.5 * max(var_prop),
3, 1)
# Create color vector (first is always red if there are unknowns)
#   if( var_table["Unknown"] > 0 ){
#     my_colors <- c("Red", colorRampPalette(c("darkblue", "darkgreen"))(length(levels(var)) -1))
#   } else {
#   }
if(is.null(by_var)){
my_colors <- colorRampPalette(c("darkblue", "darkgreen"))(length(levels(var)))
if(rain){
my_colors <- rainbow(length(levels(var)))
}
}else{
my_colors <- colorRampPalette(c("darkblue", "darkgreen"))(length(levels(by_var)))
if(rain){
my_colors <- rainbow(length(levels(by_var)))
}
}
my_colors <- adjustcolor(my_colors, alpha.f = 0.6)
# Make barplot
if(is.null(by_var)){
if(percent){
bp <- barplot(var_prop,
ylim = c(0, max(ci$ub)*120),
col = my_colors,
border = border,
ylab = "Percent",
cex.names = cex.names,
las = las,
beside = TRUE)
if(legend){
legend(x = "topright",
fill = my_colors,
bty = "n",
ncol = round(length(my_colors) / 2),
legend = levels(var),
cex = legend.cex,
title = legend.title)
}
# Add point estimate text
#   text(x = bp[,1],
#        y = var_vals,
#        labels = paste0(round(var_prop, digits = 1), "%"),
#        pos = var_pos)
# Add error bars
errbar(x=bp[,1],
y=var_prop,
yplus=ci$ub*100,
yminus=ci$lb*100,
add=TRUE,
type="n",
errbar.col=adjustcolor("darkred", alpha.f=0.6),
lwd=2)
# Add text of point estimate with c.i.'s
text(x=bp[,1],
y= ifelse(var_pos == 1,
var_prop - (.1*max(var_prop)),
var_prop + (.1*max(var_prop))),
labels=paste0(" ", round(var_prop, digits=1),
"%",
"\n(",
round(ci$lb*100, digits=1),
"%",
"-",
round(ci$ub*100, digits=1),
"%",
")"
),
cex=err.cex,
col=adjustcolor("black", alpha.f=0.7))
abline(h = 0)
}else {
bp <- barplot(var_table,
ylim = c(0, max(ub)*1.2),
col = my_colors,
border = border,
ylab = "Percent",
cex.names = cex.names,
las = las,
beside = TRUE)
if(legend){
legend(x = "topright",
fill = my_colors,
bty = "n",
ncol = round(length(my_colors) / 2),
legend = levels(var),
cex = legend.cex,
title = legend.title)
}
# Add error bars
errbar(x=bp[,1],
y=var_table,
yplus=ub,
yminus=lb,
add=TRUE,
type="n",
errbar.col=adjustcolor("darkred", alpha.f=0.6),
lwd=2)
# Add text of point estimate with c.i.'s
text(x=bp[,1],
y= ifelse(var_pos == 1,
var_table - (.1*max(var_table)),
var_table + (.1*max(var_table))),
labels=paste0(" ", round(var_prop, digits=1),
"%",
"\n(",
round(ci$lb*100, digits=1),
"%",
"-",
round(ci$ub*100, digits=1),
"%",
")"
),
cex=err.cex,
col=adjustcolor("black", alpha.f=0.7))
abline(h = 0)
}
# begin by_var
} else{
if(percent){
bp <- barplot(var_prop,
ylim = c(0, max(ci$ub)*120),
col = my_colors,
border = border,
ylab = "Percent",
cex.names = cex.names,
las = las,
beside = TRUE)
if(legend){
legend(x = "topright",
fill = my_colors,
bty = "n",
ncol = round(length(my_colors) / 2),
legend = levels(by_var),
cex = legend.cex,
title = legend.title)
}
# Add error bars
errbar(x=bp,
y=var_prop,
yplus=ci$ub*100,
yminus=ci$lb*100,
add=TRUE,
type="n",
errbar.col=adjustcolor("darkred", alpha.f=0.6),
lwd=2)
# Add text of point estimate with c.i.'s
text(x=bp,
y= ifelse(var_pos == 1,
var_prop - (.1*max(var_prop)),
var_prop + (.1*max(var_prop))),
labels=paste0(" ", round(var_prop, digits=1),
"%",
"\n(",
round(ci$lb*100, digits=1),
"%",
"-",
round(ci$ub*100, digits=1),
"%",
")"
),
cex=err.cex,
col=adjustcolor("black", alpha.f=0.7))
abline(h = 0)
} else{
bp <- barplot(var_table,
ylim = c(0, max(ub)*1.2),
col = my_colors,
border = border,
ylab = "Percent",
cex.names = cex.names,
las = las,
beside = TRUE)
if(legend){
legend(x = "topright",
fill = my_colors,
bty = "n",
ncol = round(length(my_colors) / 2),
legend = levels(by_var),
cex = legend.cex,
title = legend.title)
}
# Add error bars
errbar(x=bp,
y=var_table,
yplus=ub,
yminus=lb,
add=TRUE,
type="n",
errbar.col=adjustcolor("darkred", alpha.f=0.6),
lwd=2)
# Add text of point estimate with c.i.'s
text(x=bp,
y= ifelse(var_pos == 1,
var_table - (.1*max(var_table)),
var_table + (.1*max(var_table))),
labels=paste0(" ", round(var_prop, digits=1),
"%",
"\n(",
round(ci$lb*100, digits=1),
"%",
"-",
round(ci$ub*100, digits=1),
"%",
")"
),
cex=err.cex,
col=adjustcolor("black", alpha.f=0.7))
abline(h = 0)
}
}
}
BarFun(comb[,"Insurance.Carrier"],
comb[,5],
ref = NULL,
recode_var = NULL,
cex.names = 0.6,
las = 3,
percent = TRUE,
border = "black",
#rain = TRUE,
legend = TRUE,
err.cex = 0.2)
BarFun(comb[,"Insurance.Carrier"],
comb[,5],
ref = NULL,
recode_var = NULL,
cex.names = 0.6,
las = 3,
percent = TRUE,
border = "black",
#rain = TRUE,
legend = TRUE,
err.cex = 0.2)
BarFun(comb[,"Insurance.Carrier"],
comb[,5],
ref = NULL,
recode_var = NULL,
cex.names = 0.6,
las = 3,
percent = TRUE,
border = "black",
#rain = TRUE,
legend = TRUE,
err.cex = 0.4)
BarFun(comb[,"Insurance.Carrier"],
comb[,5],
ref = NULL,
recode_var = NULL,
cex.names = 0.6,
las = 3,
percent = TRUE,
border = "black",
#rain = TRUE,
legend = TRUE,
err.cex = 0.4,
legend.title = "Employer size")
